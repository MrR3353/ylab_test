version: "3.8"
services:
  postgres_ylab:
    container_name: postgres_ylab
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env_prod
    environment:
      PGUSER: "postgres"
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      - ylab_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  redis:
    container_name: redis_ylab
    image: redis:latest
    restart: unless-stopped
    networks:
      - ylab_network
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    expose:
      - 6379
    command: redis-server /usr/local/etc/redis/redis.conf

  fastapi_ylab:
    container_name: fastapi_ylab
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env_prod
    entrypoint: sh -c "alembic upgrade head && cd src && uvicorn main:app --host 0.0.0.0 --port 8000"
    volumes:
      - shared-volume:/src/generated_files
    networks:
      - ylab_network
    ports:
      - 8000:8000
    depends_on:
      postgres_ylab:
        condition: service_healthy
      redis:
        condition: service_started

  rabbitmq_ylab:
    container_name: rabbitmq_ylab
    image: rabbitmq:latest
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
    hostname: rabbitmq
    networks:
      - ylab_network
    depends_on:
      - redis

  celery:
    container_name: celery_ylab
    build:
      context: .
    entrypoint: sh -c "cd src && celery -A tasks.update_admin:celery worker --loglevel=INFO --pool=solo"
    networks:
      - ylab_network
    env_file:
      - .env_prod
    depends_on:
      rabbitmq_ylab:
          condition: service_started
      fastapi_ylab:
        condition: service_started

  celery-beat:
    container_name: celery-beat
    build:
      context: .
    entrypoint: sh -c "cd src && celery -A tasks.update_admin:celery beat --loglevel=INFO"
    networks:
      - ylab_network
    env_file:
      - .env_prod
    depends_on:
      rabbitmq_ylab:
        condition: service_started
      fastapi_ylab:
        condition: service_started
      celery:
        condition: service_started

networks:
  ylab_network:
    name: ylab_network
volumes:
  postgres_data:
  shared-volume:
